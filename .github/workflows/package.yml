name: Run tests, checks, and build docs

on:
  workflow_dispatch:
  push:
    branches: ["main"]
    tags-ignore: ["**"]
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  ckeck:
    name: Checks for ${{ matrix.env }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        env:
          - "3.13"
          - "3.12"
          - "3.11"
          - "3.10"
          - "3.9"
        os:
          - ubuntu-latest
          - windows-latest
          - macos-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install the latest version of uv
        uses: astral-sh/setup-uv@v3
        with:
          enable-cache: true
          cache-dependency-glob: "pyproject.toml"

      - name: Add .local/bin to Windows PATH
        if: runner.os == 'Windows'
        shell: bash
        run: echo "$USERPROFILE/.local/bin" >> $GITHUB_PATH

      - name: Install tox
        run: uv tool install --python-preference only-managed --python 3.13 tox --with tox-uv --with tox-gh

      - name: Install Python
        if: matrix.env != '3.13'
        run: uv python install --python-preference only-managed ${{ matrix.env }}

      - name: Setup test suite
        run: tox run -vv --notest --skip-missing-interpreters false
        env:
          TOX_GH_MAJOR_MINOR: ${{ matrix.env }}

      - name: Run test suite
        run: tox run --skip-pkg-install
        env:
          PYTEST_ADDOPTS: "-vv --durations=20"
          DIFF_AGAINST: HEAD
          PYTEST_XDIST_AUTO_NUM_WORKERS: 0
          TOX_GH_MAJOR_MINOR: ${{ matrix.env }}

      - name: Generate coverage summary
        uses: clearlyip/code-coverage-report-action@v5.1.0
        if: runner.os == 'Linux'
        with:
          filename: '${{ github.workspace }}/.tox/coverage.${{ matrix.env }}.xml'
          overall_coverage_fail_threshold: 50
          file_coverage_error_min: 60
          fail_on_negative_difference: false
          file_coverage_warning_max: 75

      - name: Post coverage comment
        uses: marocchino/sticky-pull-request-comment@v2
        if: runner.os == 'Linux' && github.event_name == 'pull_request'
        with:
          recreate: true
          path: code-coverage-results.md

  docs:
    name: Docs on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install the latest version of uv
        uses: astral-sh/setup-uv@v3
        with:
          enable-cache: true
          cache-dependency-glob: "pyproject.toml"

      - name: Install tox
        run: uv tool install --python-preference only-managed --python 3.13 tox --with tox-uv

      - name: Add .local/bin to Windows PATH
        if: runner.os == 'Windows'
        shell: bash
        run: echo "$USERPROFILE/.local/bin" >> $GITHUB_PATH

      - name: Setup check suite
        run: tox r -vv --notest --skip-missing-interpreters false -e docs

      - name: Build docs
        run: tox r --skip-pkg-install -e docs

      - name: Upload documentation artifact
        uses: actions/upload-artifact@v4
        with:
          name: sphinx-docs-html
          path: '${{ github.workspace }}/.tox/docs_out/html'
          overwrite: true
          retention-days: 1

      - name: Deploy to gh-pages branch
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir:  '${{ github.workspace }}/.tox/docs_out/html'
          publish_branch: gh-pages
          force_orphan: true
