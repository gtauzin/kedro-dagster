name: tests_versions
on:
  # Allow manual triggering when needed
  workflow_dispatch:
  # Always run on pushes to main
  push:
    branches: ["main"]
    tags-ignore: ["**"]
  # Run on PRs when ready for review (non-draft). We include synchronize so
  # subsequent commits also run, but gate with a job-level condition.
  pull_request:
    branches: ["main"]
    types: [opened, synchronize, reopened, ready_for_review]

permissions:
  pull-requests: write

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  versions:
    name: Version matrix ${{ matrix.python-version }} | ${{ matrix.kedro_spec }} | ${{ matrix.dagster_spec }} on ${{ matrix.os }} (mlflow)
    # Only run for non-draft PRs or on non-PR events (e.g., push to main)
    if: ${{ github.event_name != 'pull_request' || github.event.pull_request.draft == false }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10", "3.11", "3.12", "3.13"]
        os: [ubuntu-latest]
        kedro_spec: ["kedro>=0.19,<1.0", "kedro>=1.0,<1.1"]
        dagster_spec: ["dagster>=1.10,<1.11", "dagster>=1.11,<1.12", "dagster>=1.11,<1.13",]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install the latest version of uv
        uses: astral-sh/setup-uv@v3
        with:
          enable-cache: true
          cache-dependency-glob: "pyproject.toml"

      - name: Install nox
        run: uv tool install --python-preference only-managed nox

      - name: Install Python ${{ matrix.python-version }}
        run: uv python install --python-preference only-managed ${{ matrix.python-version }}

      - name: Run versioned tests with mlflow
        shell: bash
        run: |
          # Parameter order must match Nox's generated session names: (with_mlflow, dagster_spec, kedro_spec)
          nox -s "tests_versions-${{ matrix.python-version }}(with_mlflow=True, dagster_spec='${{ matrix.dagster_spec }}', kedro_spec='${{ matrix.kedro_spec }}')"
        env:
          PYTEST_XDIST_AUTO_NUM_WORKERS: 0
